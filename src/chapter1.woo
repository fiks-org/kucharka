%
% Základní tvorba osbahu
%


.Chapter Úvod
  label: chap-intro
  index: uvod


Vítej ve FIKSím průvodci světem teoretické informatiky. V tomto průvodci se
budeme hodně odkazovat na "Průvodce labyrintem algoritmů"@1 jako zdroj
dalších informací o problémech, kterými se budeme zabývat.
  1:
    link: http://pruvodce.ucw.cz/


Tento průvodce je určen jak pro řešitele FIKSu, tak pro kohokoliv, kdo chce zjistit
něco o teoretické informatice.


.Section FIKS
  label: fiks


Ale nejdřív nějaká selfpromotion. Co je to vlastně ten FIKS?


.Definition:
  label: def-fiks
  index: FIKS
  title: FIKS

  FIKS neboli Fitácký Informatický Korespondenční Seminář je jak už název napovídá korespondeční
  seminář, organizovaný hlavně studenty z "FIT ČVUT"@1. Určený je hlavně pro středoškoláky, které si
  klade za cíl naučit nebo aspon seznámit s algoritmickými problémy a základy teoretické informatiky.
    1:
      link: https://fit.cvut.cz


.Section Úvod do algoritmů
  label: sec-intro-algo


Co je to vůbec algoritmus?


.Definition:
  title: Algoritmus
  label: def-algorithm
  index: algoritmus

  Algoritmus je přesně daný postup, jak z nějakého vstupu získat nějaký výsledek.


Pokud nějaký algoritmus používáme, tak chceme věřit, že funguje jak má. Na to slouží několik vlastností, které
od algoritmu požadujeme.


.enumerate:

  .item:

    "Správnost".notion.1 algoritmu - že opravdu vždy vrátí to, co od něj očekáváme.
      1:
        index: algoritmus!správnost

  .item:

    "Konečnost".notion.1 algoritmu - že se algoritmus nezacyklí a vždy skončí s nějakým výsledkem.
      1:
        index: algoritmus!konečnost

  .item:

    "Časová složitost".notion.1 algoritmu - kolik kroků algoritmus vykoná na základě velikosti vstupu.
      1:
        index: algoritmus!časová složitost

  .item:

    "Pamětová složitost".notion.1 algoritmu - jak velkou část paměti využije.
      1:
        index: algoritmus!pamětová složitost


V této publikaci budeme hojně využívat zavedených matematických pojmů, které si zadefinujeme postupně v průběhu.
Ale na začátek si zadefinujeme aspon nějaké základní pojmy.


Pamětová a časová složitost se běžně udávají jako $\lanO$, $\Omega$ nebo $\Theta$. Co to ale znamená?


.Definition:
  label: def-asymptoticka-horni-mez
  index: mez!asymptotická horní
  title: Asymptotická horní mez

  Mějme dvě funkce $f$ a $g$. $f$ je asymptoticky shora omezená $g$ právě tehdy, když existují nějaké konstanty $c > 0$ a $x_0$ takové,
  že pro všechna $x > x_0$ platí nerovnost $|f(x)| \le |c*g(x)|$.


  Značíme $f(x) = \lanO(g(x))$.


.Definition:
  label: def-asymptoticka-dolni-mez
  index: mez!asymptotická dolní
  title: Asymptotická dolní mez

  Mějme dvě funkce $f$ a $g$. $f$ je asymptoticky zdola omezená $g$ právě tehdy, když existují nějaké konstanty $c > 0$ a $x_0$ takové,
  že pro všechna $x > x_0$ platí nerovnost $|f(x)| \ge |c*g(x)|$.


  Značíme $f(x) = \Omega(g(x))$.


Pomocí těch, pak můžeme definovat asymptotickou těsnou mez.


.Definition:
  label: def-asymptoticka-tesna-mez
  index: mez!asymptotická těsná
  title: Asymptotická těsná mez

  Mějme dvě funkce $f$ a $g$. $f$ je asymptoticky ekvivalentní $g$ právě tehdy, když
  $f(x) = \lanO(g(x)) \land f(x) = \Omega(g(x))$.


  Značíme $f(x) = \Theta(g(x))$.


.Remark:
  label: rem-asymptotika-mnoziny

  Běžně se lze setkat i s notací $f(x) \in \lanO(g(x))$.
  Pak se $\lanO(g(x))$ považuje za množinu všech funkcí, které jsou asymptoticky shora omezené $g$.


Když už se nakously množiny, tak si zavedeme nějaké pojmy o množinách.


.Definition:
  label: def-mnozina
  title: Množina

  Množina je matematický objekt neuspořádaných prvků. Můžete si ho představit třeba jako pytel s věcmi.
  Každá množina obsahuje prvky nějakého univerza $\mathcal{U}$

  
  Množinu
